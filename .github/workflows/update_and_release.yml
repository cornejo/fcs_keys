name: Update Submodules and Create Release

on:
  workflow_dispatch: # Trigger manually or change to 'push'/'schedule' as needed

jobs:
  update-submodules-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    container:
      image: blacktop/ipsw
      options: --workdir /github/workspace -v ${{ github.workspace }}:/github/workspace
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Pass the GitHub token into the container

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run custom script
        working-directory: /github/workspace
        run: |
          apt-get update
          apt-get install -y git
          ipsw version
          env
          mkdir -p ${HOME}/.config/
          ln -s /github/workspace ${HOME}/.config/ipsw
          ipsw dl appledb --os macOS --version '15.0 beta 2' --fcs-keys-json --output /tmp --confirm
          find /github/workspace/
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git status
          git add appledb
          git commit -m "Automatic update" || echo "No changes to commit"
          git push origin HEAD:main



#      - name: Run custom script
#        run: |
#          ./update.py
#
#      - name: Commit changes
#        run: |
#          git config --global user.name "github-actions[bot]"
#          git config --global user.email "github-actions[bot]@users.noreply.github.com"
#          git add .
#          git commit -m "Updated submodules and ran custom script [CI]" || echo "No changes to commit"
#          mkdir foobar
#          echo ok > foobar/hi
#          echo Tag "v$(date +%Y%m%d%H%M%S)"
#          ls foobar
#          echo "TAG=v$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV  # Saves the tag in GitHub environment
#
#      - name: Create release
#        uses: ncipollo/release-action@v1
#        with:
#          tag: ${{ env.TAG }}
#          name: Release ${{ env.TAG }}
#          commit: main
#          artifacts: "foobar/*"
#          draft: false
#          prerelease: false
#
#