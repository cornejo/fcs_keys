name: Update Keys and Create Release

on:
  schedule:
    - cron: "42 * * * *"
  workflow_dispatch:

jobs:
  update-keys-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    container:
      image: blacktop/ipsw
      options: --workdir /github/workspace -v ${{ github.workspace }}:/github/workspace
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y git python3 python3-pip python3-requests

      - name: Get new keys and commit
        working-directory: /github/workspace
        run: |
          ipsw version
          git clone https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          cd `basename ${GITHUB_REPOSITORY}`
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          ./update.py
          git add keys
          git commit -m "Automatic update" || echo "No changes to commit"
          git push origin HEAD:main
          echo "TAG=v$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV  # Saves the tag in GitHub environment
          tar cvjf keys-${TAG}.tbz2 keys
      
      - name: Delete old releases
        uses: dev-drprasad/delete-older-releases@v0.2.0
        with:
          keep_latest: 0            # Number of latest releases to keep

      - name: Make releases
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.TAG }}
          name: Current Release
          commit: main
          artifacts: "*/keys-${{ env.TAG }}.tbz2"
          draft: false
          prerelease: false

#          mkdir -p ${HOME}/.config/
#          ln -s ${PWD} ${HOME}/.config/ipsw
#          ipsw dl appledb --os macOS --version '15.0 beta 2' --fcs-keys-json --output /tmp --confirm
#          git clone https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
#          cd `basename ${GITHUB_REPOSITORY}`
#          git config --global user.name "github-actions[bot]"
#          git config --global user.email "github-actions[bot]@users.noreply.github.com"
#          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
#          git status
#          git add appledb
#          git commit -m "Automatic update" || echo "No changes to commit"
#          git push origin HEAD:main



#      - name: Run custom script
#        run: |
#          ./update.py
#
#      - name: Commit changes
#        run: |
#          git config --global user.name "github-actions[bot]"
#          git config --global user.email "github-actions[bot]@users.noreply.github.com"
#          git add .
#          git commit -m "Updated submodules and ran custom script [CI]" || echo "No changes to commit"
#          mkdir foobar
#          echo ok > foobar/hi
#          echo Tag "v$(date +%Y%m%d%H%M%S)"
#          ls foobar
#          echo "TAG=v$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV  # Saves the tag in GitHub environment
#
#      - name: Create release
#        uses: ncipollo/release-action@v1
#        with:
#          tag: ${{ env.TAG }}
#          name: Release ${{ env.TAG }}
#          commit: main
#          artifacts: "foobar/*"
#          draft: false
#          prerelease: false
#
#